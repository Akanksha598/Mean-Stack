{"version":3,"sources":["/./src/app/app.component.html","/./src/app/error/error.component.html","/./src/app/header/header.component.html","/./src/app/posts/post-create/post-create.component.html","/./src/app/posts/posts-list/posts-list.component.html","/./src/$_lazy_route_resource lazy namespace object","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/auth/auth-guard.service.ts","/./src/app/auth/auth-interceptor.ts","/./src/app/error/error.component.ts","/./src/app/header/header.component.css","/./src/app/header/header.component.ts","/./src/app/posts.service.ts","/./src/app/posts/post-create/mime-type.validator.ts","/./src/app/posts/post-create/post-create.component.css","/./src/app/posts/post-create/post-create.component.ts","/./src/app/posts/posts-list/posts-list.component.css","/./src/app/posts/posts-list/posts-list.component.ts","/./src/app/posts/posts.module.ts","/./src/app/shared/auth.service.ts","/./src/app/shared/custom-material/custom-material.module.ts","/./src/app/shared/error-interceptor.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<app-header></app-header>\\n<main>\\n    <!-- <app-post-create (postCreated)=\\\"newPostAdded($event)\\\"></app-post-create> -->\\n    <!-- <app-post-create></app-post-create> -->\\n    <!-- <app-posts-list [posts]=\\\"storedPosts\\\"></app-posts-list> -->\\n    <!-- <app-posts-list></app-posts-list> -->\\n    <router-outlet></router-outlet>\\n</main>\\n\\n\"","module.exports = \"<h1 mat-dialog-title>An Error Occurred!</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p class=\\\"mat-body-1\\\">{{ data.message }}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-flat-button mat-dialog-close color=\\\"accent\\\">Okay</button>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>\\n    <a [routerLink]=\\\"['/']\\\">My Messages</a>\\n  </span>\\n  <span class=\\\"spacer\\\"></span>\\n  <ul>\\n    <li *ngIf=\\\"isUserAuthenticated\\\">\\n      <a\\n        mat-button\\n        [routerLink]=\\\"['/create']\\\"\\n        [routerLinkActive]=\\\"'mat-accent'\\\"\\n        routerlinkOptions=\\\"{exact:true}\\\"\\n        >New Post</a\\n      >\\n    </li>\\n    <li *ngIf=\\\"!isUserAuthenticated\\\">\\n      <a\\n        mat-button\\n        [routerLink]=\\\"['/auth/login']\\\"\\n        [routerLinkActive]=\\\"'mat-accent'\\\"\\n        routerlinkOptions=\\\"{exact:true}\\\"\\n        >Login</a\\n      >\\n    </li>\\n    <li *ngIf=\\\"!isUserAuthenticated\\\">\\n      <a\\n        mat-button\\n        [routerLink]=\\\"['/auth/signup']\\\"\\n        [routerLinkActive]=\\\"'mat-accent'\\\"\\n        routerlinkOptions=\\\"{exact:true}\\\"\\n        >Sign Up</a\\n      >\\n    </li>\\n    <li *ngIf=\\\"isUserAuthenticated\\\">\\n      <button mat-button color=\\\"accent\\\" (click)=\\\"onLogOut()\\\">LogOut</button>\\n    </li>\\n  </ul>\\n</mat-toolbar>\\n\"","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSavePosts()\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"title\\\"\\n        placeholder=\\\" Post Title\\\"\\n      />\\n      <mat-error *ngIf=\\\"form.get('title').invalid\\\"\\n        >Please enter a title for post</mat-error\\n      >\\n    </mat-form-field>\\n    <div>\\n      <button\\n        mat-stroked-button\\n        color=\\\"primary\\\"\\n        (click)=\\\"filePicker.click()\\\"\\n        type=\\\"button\\\"\\n      >\\n        Pick Image\\n      </button>\\n      <input\\n        type=\\\"file\\\"\\n        [hidden]=\\\"true\\\"\\n        #filePicker\\n        (change)=\\\"onImagePicked($event)\\\"\\n      />\\n    </div>\\n    <div\\n      class=\\\"imagePreview\\\"\\n      *ngIf=\\\"\\n        imagePreview && imagePreview !== ''.toString && form.get('image').valid\\n      \\\"\\n    >\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.title\\\" />\\n    </div>\\n    <mat-form-field>\\n      <textarea\\n        matInput\\n        rows=\\\"4\\\"\\n        formControlName=\\\"content\\\"\\n        placeholder=\\\"Post Content\\\"\\n      ></textarea>\\n      <mat-error *ngIf=\\\"form.get('content').invalid\\\"\\n        >Please enter content for post</mat-error\\n      >\\n    </mat-form-field>\\n    <button mat-flat-button color=\\\"accent\\\" type=\\\"submit\\\">Save Posts</button>\\n  </form>\\n</mat-card>\\n<!-- <textarea rows=\\\"6\\\" [value]=\\\"newPost\\\" #postInput></textarea> -->\\n<!-- <button (click)=\\\"onAddPosts()\\\">Save Posts</button> -->\\n<!-- <p>{{newPost}}</p> -->\\n\"","module.exports = \"<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length > 0 && !isLoading\\\">\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\n    <mat-expansion-panel-header>\\n      {{ post.title }}\\n    </mat-expansion-panel-header>\\n    <div class=\\\"post-image\\\">\\n      <img [src]=\\\"post.imagePath\\\" [alt]=\\\"post.title\\\" />\\n    </div>\\n    <p>{{ post.content }}</p>\\n    <mat-action-row *ngIf=\\\"isUserAuthenticated && userId === post.creator\\\">\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/edit', post.id]\\\">EDIT</a>\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"deletePost(post.id)\\\">\\n        DELETE\\n      </button>\\n    </mat-action-row>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n<mat-paginator\\n  [length]=\\\"totalPosts\\\"\\n  [pageSize]=\\\"postsPerPage\\\"\\n  [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n  (page)=\\\"onChangedPage($event)\\\"\\n  *ngIf=\\\"posts.length > 0\\\"\\n></mat-paginator>\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"posts.length <= 0 && !isLoading\\\">\\n  There is nothing to display...\\n</p>\\n\"","var map = {\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostsListComponent } from './posts/posts-list/posts-list.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { AuthGuardService } from './auth/auth-guard.service';\n\nconst routes: Routes = [\n  { path: '', component: PostsListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuardService] },\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuardService] },\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuardService]\n})\nexport class AppRoutingModule { }\n","module.exports = \"main\\r\\n{\\r\\n  width: 80%;\\r\\n  margin: 1rem auto;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsVUFBVTtFQUNWLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWFpblxyXG57XHJcbiAgd2lkdGg6IDgwJTtcclxuICBtYXJnaW46IDFyZW0gYXV0bztcclxufVxyXG5cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './shared/auth.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'mean-course';\n  ngOnInit(): void {\n    this.authService.autoAuthUser();\n  }\n\n  constructor(private authService: AuthService) { }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CustomMaterialModule } from './shared/custom-material/custom-material.module';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './shared/error-interceptor';\nimport { ErrorComponent } from './error/error.component';\nimport { PostsModule } from './posts/posts.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CustomMaterialModule,\n    PostsModule,\n    HttpClientModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../shared/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  canActivate(_route: import('@angular/router').ActivatedRouteSnapshot,\n    _state: import('@angular/router').RouterStateSnapshot): boolean |\n    import('@angular/router').UrlTree | import('rxjs').Observable<boolean |\n    import('@angular/router').UrlTree> | Promise<boolean | import('@angular/router').UrlTree> {\n    const isAuth = this.authService.getAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n    }\n    return isAuth;\n  }\n\n  constructor(private authService: AuthService, private router: Router) { }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../shared/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\r\n    });\r\n    // const authRequest = req.clone({\r\n    //   setHeaders: {\r\n    //     'Authorization': `Bearer ${authToken}`\r\n    //   },\r\n    // });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  templateUrl: './error.component.html'\r\n})\r\n\r\nexport class ErrorComponent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }) { }\r\n}\r\n","module.exports = \"a {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\nul {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n}\\r\\n.spacer {\\r\\n  -webkit-box-flex: 1;\\r\\n          flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLFlBQVk7QUFDZDtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixTQUFTO0VBQ1Qsb0JBQWE7RUFBYixhQUFhO0FBQ2Y7QUFDQTtFQUNFLG1CQUFjO1VBQWQsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxudWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW46IDA7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG4uc3BhY2VyIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../shared/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isUserAuthenticated = false;\n  private authStatusSubs: Subscription;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.isUserAuthenticated = this.authService.getAuth();\n    this.authStatusSubs = this.authService.getAuthenticationStatus()\n      .subscribe(authenticatedStatus => {\n        this.isUserAuthenticated = authenticatedStatus;\n      });\n  }\n\n  ngOnDestroy() {\n    this.authStatusSubs.unsubscribe();\n  }\n\n  onLogOut() {\n    this.authService.logOut();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Posts } from './shared/post.model';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from '../environments/environment';\n\nconst BACKEND_URL = environment.apiURL + '/posts/';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PostsService {\n  private posts: Posts[] = [];\n  private postUpdated = new Subject<{ posts: Posts[], postsCount: number }>();\n  constructor(private http: HttpClient, private router: Router) { }\n\n  addPosts(post: Posts) {\n    this.posts.push(post);\n  }\n  addPostsAlternative(title: string, content: string, image: File) {\n    // const post: Posts = { title: title, content: content };\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title);\n    this.http.post<{ message: string, post: Posts }>(BACKEND_URL, postData)\n      .subscribe(\n        (responseData) => {\n          // const post: Posts = {\n          //   id: responseData.post.id, title: title, content: content,\n          //   imagePath: responseData.post.imagePath\n          // };\n          // // const id = responseData.postId;\n          // // post.id = id;\n          // // console.log(responseData.message);\n          // this.posts.push(post);\n          // this.postUpdated.next([...this.posts]);\n          this.router.navigate(['/']);\n        });\n  }\n  // getPosts() {\n  //  // return [...this.posts]; // spread operator square operator to cretae a new array and  dots to take all elements of new array\n  //  this.http.get<{message: string, posts: Posts []}> ('http://localhost:3000/api/posts')\n  //  .subscribe((postData) => { this.posts = postData.posts ; });\n  //  this.postUpdated.next([...this.posts]);\n  // }\n  getPosts(postsPerpage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postsPerpage}&page=${currentPage}`;\n    this.http.get<{ message: string, posts: any, maxPosts: number }>\n      (BACKEND_URL + queryParams).pipe(map((postData) => {\n        return {\n          posts: postData.posts.map(post => {\n            return {\n              title: post.title, content: post.content, id: post._id,\n              imagePath: post.imagePath,\n              creator: post.creator\n            };\n          }),\n          maxPosts: postData.maxPosts\n        };\n      }))\n      .subscribe((transformedPostData) => {\n        // console.log(transformedPostData);\n        this.posts = transformedPostData.posts;\n        this.postUpdated.next({\n          posts: [...this.posts],\n          postsCount: transformedPostData.maxPosts\n        });\n      });\n  }\n\n  getUpdatedListener() {\n    return this.postUpdated.asObservable();\n  }\n\n  getPostId(postId: string) {\n    // return {...this.posts.find( p => p.id === postId )};\n    return this.http.get<{ _id: string, title: string, content: string, imagePath: string, creator: string }>\n      (BACKEND_URL + postId);\n  }\n\n  updatePosts(id: string, title: string, content: string, image: File | string) {\n    let postData: Posts | FormData;\n    if (typeof (image === 'object')) {\n      postData = new FormData();\n      postData.append('id', id);\n      postData.append('title', title);\n      postData.append('content', content);\n      postData.append('image', image);\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    // const post: Posts = {\n    //   id: id, title: title, content: content,\n    //   imagePath: null\n    // };\n    this.http.put(BACKEND_URL + id, postData)\n      .subscribe(response => {\n        const updatedPosts = [...this.posts];\n        // const oldPostIndex = updatedPosts.findIndex(p => p.id === id);\n        // const post: Posts = {\n        //   id: id,\n        //   title: title,\n        //   content: content,\n        //   imagePath: ''\n        // };\n        // updatedPosts[oldPostIndex] = post;\n        // this.posts = updatedPosts;\n        // this.postUpdated.next([...this.posts]);\n        this.router.navigate(['/']);\n      });\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete(BACKEND_URL + postId);\n    // .subscribe(() => {\n    //   const updatedPosts = this.posts.filter(post => post.id !== postId);\n    //   this.posts = updatedPosts;\n    //   this.postUpdated.next([...this.posts]);\n    //   console.log('Deleted');\n    // });\n  }\n}\n","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof (control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = new Observable(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener('loadend', () => {\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n        let header = '';\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case '89504e47':\r\n            isValid = true;\r\n            break;\r\n          case 'ffd8ffe0':\r\n          case 'ffd8ffe1':\r\n          case 'ffd8ffe2':\r\n          case 'ffd8ffe3':\r\n          case 'ffd8ffe8':\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; // Or you can use the blob.type as fallback\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","module.exports = \"mat-form-field,\\r\\ntextarea {\\r\\n  width: 100%;\\r\\n  /* padding-top: 1%; */\\r\\n}\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n[hidden] {\\r\\n  display: none;\\r\\n}\\r\\n.imagePreview {\\r\\n  margin: 1rem 0;\\r\\n  height: 5 rem;\\r\\n}\\r\\n.imagePreview img {\\r\\n  height: 50%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxXQUFXO0VBQ1gscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUVBO0VBQ0UsY0FBYztFQUNkLGFBQWE7QUFDZjtBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkLFxyXG50ZXh0YXJlYSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgLyogcGFkZGluZy10b3A6IDElOyAqL1xyXG59XHJcbm1hdC1zcGlubmVyIHtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuW2hpZGRlbl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5pbWFnZVByZXZpZXcge1xyXG4gIG1hcmdpbjogMXJlbSAwO1xyXG4gIGhlaWdodDogNSByZW07XHJcbn1cclxuXHJcbi5pbWFnZVByZXZpZXcgaW1nIHtcclxuICBoZWlnaHQ6IDUwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Posts } from 'src/app/shared/post.model';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PostsService } from 'src/app/posts.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { mimeType } from './mime-type.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/shared/auth.service';\n\n\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  mode = 'create';\n  private postId = null;\n  form: FormGroup;\n  isLoading = false;\n  posts: Posts;\n  imagePreview: string | ArrayBuffer;\n  authStatusSubs: Subscription;\n  // @Output() postCreated = new EventEmitter<Posts>();\n  constructor(private postsService: PostsService, public route: ActivatedRoute,\n    private authService: AuthService) { }\n  ngOnInit() {\n    this.authStatusSubs = this.authService.getAuthenticationStatus().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n    this.form = new FormGroup(\n      {\n        'title': new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n        'content': new FormControl(null, { validators: [Validators.required] }),\n        'image': new FormControl(null, {\n          validators: [Validators.required],\n          asyncValidators: [mimeType]\n        })\n      },\n    );\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('postId')) {\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        // this.posts = this.postsService.getPostId(this.postId);\n        this.postsService.getPostId(this.postId).subscribe((postData) => {\n          this.isLoading = false;\n          this.posts = {\n            id: postData._id, title: postData.title, content: postData.content,\n            imagePath: postData.imagePath, creator: postData.creator\n          };\n          this.form.setValue({\n            title: this.posts.title,\n            content: this.posts.content,\n            image: this.posts.imagePath\n          });\n        });\n      } else {\n        this.mode = 'create';\n        this.postId = null;\n      }\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    }; // Since this works asynchronously you have to react to the onload event (wait until the whle file is loaded/read).\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n    // readAsDataURL returns the content of long url\n    // console.log(reader.readAsDataURL(file));\n    // console.log(file);\n    // console.log(this.form);\n  }\n  onSavePosts() {\n    // this.newPost = postInput.value;\n    if (this.form.invalid) { return; }\n    // title = form.value.title;\n    // content = form.value.content;\n    // id = form.value.id;\n    // const post: Posts = { title: this.form.value.title, content: this.form.value.content };\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.postsService.addPostsAlternative(this.form.value.title, this.form.value.content, this.form.value.image);\n    } else {\n      this.postsService.updatePosts(this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image);\n    }\n    this.form.reset();\n    // form.resetForm(); // This is in case of template-driven form\n    // this.postsService.addPosts(post);\n    // alert('i think you posted ' + this.enteredContent);\n    // this.postCreated.emit(post);\n  }\n  ngOnDestroy(): void {\n    this.authStatusSubs.unsubscribe();\n  }\n}\n","module.exports = \":host {\\r\\n  display: block;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n.info-text {\\r\\n  text-align: center;\\r\\n}\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n.post-image {\\r\\n  width: 100%;\\r\\n}\\r\\nmat-paginator {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n.post-image img {\\r\\n  width: 50%;\\r\\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdHMtbGlzdC9wb3N0cy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUVBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFVBQVU7RUFDViwwQ0FBMEM7QUFDNUMiLCJmaWxlIjoic3JjL2FwcC9wb3N0cy9wb3N0cy1saXN0L3Bvc3RzLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tdG9wOiAxcmVtO1xyXG59XHJcbi5pbmZvLXRleHQge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5tYXQtc3Bpbm5lciB7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4ucG9zdC1pbWFnZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxubWF0LXBhZ2luYXRvciB7XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG4ucG9zdC1pbWFnZSBpbWcge1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgYm94LXNoYWRvdzogMXB4IDFweCA1cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Posts } from 'src/app/shared/post.model';\nimport { PostsService } from 'src/app/posts.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material';\nimport { AuthService } from '../../shared/auth.service';\n\n\n\n@Component({\n  selector: 'app-posts-list',\n  templateUrl: './posts-list.component.html',\n  styleUrls: ['./posts-list.component.css']\n})\nexport class PostsListComponent implements OnInit, OnDestroy {\n  // @Input() posts: Posts[]  = [];\n  // @Input() post: Posts = {title: '', content: ''};\n  // posts = [{title: 'test1', content: 'tested'},\n  // {title: 'test2', content: 'tested again'},\n  // {title: 'test3', content: 'tested again'}];\n  posts: Posts[] = [];\n  isLoading = true;\n  totalPosts = 0;\n  postsPerPage = 2;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  postSubscription = new Subscription();\n  authStatusSubs = new Subscription();\n  isUserAuthenticated = false;\n  userId = null;\n  constructor(private postsService: PostsService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    this.postSubscription = this.postsService.getUpdatedListener().subscribe(\n      (postData: { posts: Posts[], postsCount: number }) => {\n        this.isLoading = false;\n        this.posts = postData.posts;\n        this.totalPosts = postData.postsCount;\n      });\n    this.isUserAuthenticated = this.authService.getAuth();\n    // console.log(this.isUserAuthenticated);\n    this.authStatusSubs = this.authService.getAuthenticationStatus()\n      .subscribe(authenticatedStatus => {\n        this.isUserAuthenticated = authenticatedStatus;\n        this.userId = this.authService.getUserId();\n      });\n  }\n\n  deletePost(id: string) {\n    this.isLoading = true;\n    console.log('I am' + this.isUserAuthenticated);\n    this.postsService.deletePost(id).subscribe(() => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.postSubscription.unsubscribe();\n    this.authStatusSubs.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    // console.log(pageData);\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { PostCreateComponent } from './post-create/post-create.component';\r\nimport { PostsListComponent } from './posts-list/posts-list.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CustomMaterialModule } from '../shared/custom-material/custom-material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PostCreateComponent, PostsListComponent],\r\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, CustomMaterialModule]\r\n})\r\nexport class PostsModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthData } from './auth-data';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\nconst BACKEND_URL = environment.apiURL + '/users/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private token: string;\n  private isAuth = false;\n  private authStatusListener = new Subject<boolean>();\n  private tokenTimer: any;\n  private userId: string;\n  constructor(private httpClient: HttpClient, private router: Router) { }\n\n  getToken() {\n    if (this.token != null && this.token !== undefined) {\n      return this.token;\n    }\n  }\n  getAuth() {\n    return this.isAuth;\n  }\n  getUserId() {\n    return this.userId;\n  }\n  getAuthenticationStatus() {\n    return this.authStatusListener.asObservable();\n  }\n  createUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.httpClient.post(BACKEND_URL + '/signup', authData)\n      .subscribe(() => {\n        // console.log(resopnse);\n        this.router.navigate(['/auth/login']);\n      }, error => { this.authStatusListener.next(false); });\n  }\n  loginUser(email: string, password: string) {\n    const authData: AuthData = { email: email, password: password };\n    this.httpClient.post<{ token: string, expiresIn: number, userId: string }>(BACKEND_URL + '/login', authData)\n      .subscribe(response => {\n        // console.log(response);\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setTimerForAuth(expiresInDuration);\n          this.isAuth = true;\n          this.userId = response.userId;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n          this.saveToLocal(token, expirationDate, this.userId);\n          this.router.navigate(['/']);\n        }\n      }, error => { this.authStatusListener.next(false); });\n    // console.log(this.token);\n  }\n  logOut() {\n    this.token = null;\n    this.isAuth = false;\n    this.userId = null;\n    clearTimeout(this.tokenTimer);\n    this.autoClearLocal();\n    this.authStatusListener.next(false);\n    this.router.navigate(['/auth/login']);\n  }\n  saveToLocal(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationDate', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n  autoClearLocal() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n  }\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    console.log(authInformation);\n    const now = new Date();\n    if (!authInformation) {\n      return;\n    }\n\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuth = true;\n      this.userId = authInformation.userId;\n      this.setTimerForAuth(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expirationDate');\n    const userId = localStorage.getItem('userId');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId\n    };\n  }\n  private setTimerForAuth(duaration: number) {\n    // console.log('Setting timer: ' + duaration);\n    this.tokenTimer = setTimeout(() => {\n      this.logOut();\n    }, duaration * 1000);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport {\n  MatInputModule, MatFormFieldModule, MatButtonModule, MatCardModule, MatToolbarModule,\n  MatProgressSpinnerModule, MatPaginatorModule, MatDialogModule\n} from '@angular/material';\nimport { MatExpansionModule } from '@angular/material';\n\n@NgModule({\n  exports: [MatInputModule, MatButtonModule,\n    MatFormFieldModule, MatCardModule, MatToolbarModule, MatExpansionModule, MatProgressSpinnerModule,\n    MatPaginatorModule, MatDialogModule]\n})\nexport class CustomMaterialModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ErrorComponent } from '../error/error.component';\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private dialog: MatDialog) { }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = 'An unknown error occurred';\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\r\n        return throwError(error);\r\n      }));\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}