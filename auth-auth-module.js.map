{"version":3,"sources":["/./src/app/auth/login/login.component.html","/./src/app/auth/signup/signup.component.html","/./src/app/auth/auth-routing.module.ts","/./src/app/auth/auth.module.ts","/./src/app/auth/login/login.component.css","/./src/app/auth/login/login.component.ts","/./src/app/auth/signup/signup.component.css","/./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form *ngIf=\\\"!isLoading\\\" (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        ngModel\\n        #emailInput=\\\"ngModel\\\"\\n        placeholder=\\\"Email\\\"\\n        required\\n        email\\n      />\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a Email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input\\n        type=\\\"password\\\"\\n        matInput\\n        name=\\\"password\\\"\\n        ngModel\\n        #passwordInput=\\\"ngModel\\\"\\n        placeholder=\\\"Password\\\"\\n        required\\n      />\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\"\\n        >Please enter a Password</mat-error\\n      >\\n    </mat-form-field>\\n    <button mat-flat-button color=\\\"accent\\\" type=\\\"submit\\\">Login</button>\\n  </form>\\n</mat-card>\\n\"","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form *ngIf=\\\"!isLoading\\\" (submit)=\\\"onSignUp(signUpForm)\\\" #signUpForm=\\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        ngModel\\n        #emailInput=\\\"ngModel\\\"\\n        placeholder=\\\"Email\\\"\\n        required\\n        email\\n      />\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a Email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input\\n        type=\\\"password\\\"\\n        matInput\\n        name=\\\"password\\\"\\n        ngModel\\n        #passwordInput=\\\"ngModel\\\"\\n        placeholder=\\\"Password\\\"\\n        required\\n      />\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\"\\n        >Please enter a Password</mat-error\\n      >\\n    </mat-form-field>\\n    <button mat-flat-button color=\\\"accent\\\" type=\\\"submit\\\">Sign Up</button>\\n  </form>\\n</mat-card>\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\nconst routes: Routes = [{ path: 'login', component: LoginComponent },\r\n{ path: 'signup', component: SignupComponent }];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CustomMaterialModule } from '../shared/custom-material/custom-material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignupComponent],\r\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule, CustomMaterialModule,\r\n    AuthRoutingModule]\r\n})\r\nexport class AuthModule { }\r\n","module.exports = \"mat-form-field\\r\\n{\\r\\n  width: 100%;\\r\\n}\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGRcclxue1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbm1hdC1zcGlubmVyIHtcclxuICBtYXJnaW46IGF1dG87XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  authStatusSubs: Subscription;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authStatusSubs = this.authService.getAuthenticationStatus().subscribe(\n      authStatus => { this.isLoading = false; }\n    );\n  }\n  onLogin(loginForm: NgForm) {\n    if (loginForm.invalid) {\n      return;\n    }\n    this.authService.loginUser(loginForm.value.email, loginForm.value.password);\n  }\n  ngOnDestroy(): void {\n    this.authStatusSubs.unsubscribe();\n  }\n}\n","module.exports = \"mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbm1hdC1zcGlubmVyIHtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSubs: Subscription;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authStatusSubs = this.authService.getAuthenticationStatus().subscribe(\n      authStatus => { this.isLoading = false; }\n    );\n  }\n  onSignUp(form: NgForm) {\n    if (form.invalid) { return; }\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n  ngOnDestroy(): void {\n    this.authStatusSubs.unsubscribe();\n  }\n}\n"],"sourceRoot":""}